2/14 first commit:spring boot学習のため、レシピ管理webアプリ作成を試みる
2/15 jsp commit temporary:jsperの依存関係が必要で沼
2/16 from jsp to thymeleaf:jspからthymeleafへ変更。application.propertiesのprefixがspring.mvcのままになっており沼
2/17 spring security study 1:spring securityを導入。@security導入後、自動で/loginへ遷移しなくなった。ユーザの保存に難
2/18 spring security study 2:httpBasic導入。IllegalArgumentExceptionが出たため、インメモリpasswordに{noop}をつけた
2/20 spring security study 3:login.html作成。自作loginページでログイン処理
2/20 spring security study 4:logout実装。パラメータを含めたurlのコントローラ実装/{username}/xxx
2/21 mybatis study 1:PostgreSQLと接続。usersテーブルへのinsert実装。
                     form th:objectとコントローラ引数内の@ModelAttribute BeanクラスでInjectionできる
2/22 mybatis study 2:select実装。parameterTypeとresultTypeを使用。DB名のカラム名と合致で勝手にインスタンスへ代入
2/23 mybatis & security study 1:SpringSecurity標準のUserDetails,UserDetailsServiceを実装したクラスを作成。
                                SecurityConfigのconfigureのauthメソッドでUserDetailsService（自作）をDIして認証処理を差替
                                UserDetailsのパスワードもハッシュ化しない場合は{noop}が必要で沼。

2/23 mybatis & security study 2:ユーザ登録時にnew BCryptPasswordEncoder().encodeでパスワードハッシュ化。
                                mapper.xmlでuseGeneratedKeys=true,keyProperty="キーの名前"で自動採番。
                                Spring Securityのauth.userDetailsService.passwordEncoder()によりハッシュで認証